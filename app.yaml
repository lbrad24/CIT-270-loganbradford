apiVersion: apps/v1
kind: Deployment
metadata:
  name: cit270loganservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cit270loganservice
  template:
    metadata:
      name: cit270loganservice
      labels:
        app: cit270loganservice
    spec:
      containers:
      - name: cit270loganservice
        image: gcr.io/cit-270-kubernetes/logan-api
        volumeMounts:
        - name: ssl
          mountPath: "/etc/letsencrypt/live/loganbradford.cit270.com/"
        command: ["npm"]
        args: ["run", "start"]
        resources:
          requests:
            cpu: 0.125
            memory: 500Mi
          limits:
            cpu: 0.125
            memory: 600Mi
        imagePullPolicy: Always
      volumes: 
      - name: ssl
        secret:
          secretName: logancerts
#---
# apiVersion: v1
# kind: Service
# metadata:
#   name: cit270loganservice-loadbalancer
# spec:
#   selector:
#     app: cit270loganservice
#   type: LoadBalancer
#   ports:
#   - port: 443
#     targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: stedi-loganbradford-nodeport
spec:
  selector:
    app: cit270loganservice
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: stedi-loganbradford-certificate
spec:
  domains:
    - loganbradford.cit270.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stedi-loganbradford-ingress
  annotations:
  #Use this command to find the address name: gcloud compute addresses list
    kubernetes.io/ingress.global-static-ip-name: cit270logan
  #needs to match the name of the ManagedCertificate
    networking.gke.io/managed-certificates: stedi-loganbradford-certificate
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
          #needs to match the name of the NodePort Service
            name: stedi-loganbradford-nodeport
            port:
              number: 80